name: Comprehensive Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: front_desk_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
          sleep 1
        done
    
    - name: Run database migrations
      working-directory: ./backend
      run: npm run migrate
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Run backend unit tests
      working-directory: ./backend
      run: npm run test
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Run backend integration tests
      working-directory: ./backend
      run: npm run test:e2e
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Run backend performance tests
      working-directory: ./backend
      run: npm run test:performance
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Generate backend coverage report
      working-directory: ./backend
      run: npm run test:cov
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run frontend unit tests
      working-directory: ./frontend
      run: npm run test
    
    - name: Run frontend component tests
      working-directory: ./frontend
      run: npm run test:coverage
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: front_desk_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
          sleep 1
        done
    
    - name: Setup database
      working-directory: ./backend
      run: |
        npm run migrate
        npm run seed
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run start:prod &
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
        PORT: 3001
    
    - name: Wait for backend
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'
    
    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      working-directory: ./frontend
      run: npx playwright test
      env:
        CI: true
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

  accessibility-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: front_desk_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Setup database
      working-directory: ./backend
      run: |
        npm run migrate
        npm run seed
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run start:prod &
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
        PORT: 3001
    
    - name: Wait for backend
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'
    
    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    - name: Run accessibility tests
      working-directory: ./frontend
      run: npx playwright test tests/e2e/accessibility.spec.ts
      env:
        CI: true
    
    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report
        path: frontend/test-results/
        retention-days: 30

  performance-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: front_desk_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Setup database
      working-directory: ./backend
      run: |
        npm run migrate
        npm run seed
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run start:prod &
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
        PORT: 3001
    
    - name: Wait for backend
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'
    
    - name: Run Artillery load tests
      working-directory: ./backend
      run: npx artillery run artillery.yml --output artillery-report.json
    
    - name: Generate Artillery HTML report
      working-directory: ./backend
      run: npx artillery report artillery-report.json --output artillery-report.html
    
    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    - name: Run frontend performance tests
      working-directory: ./frontend
      run: npx playwright test tests/e2e/performance.spec.ts
      env:
        CI: true
    
    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-reports
        path: |
          backend/artillery-report.html
          frontend/test-results/
        retention-days: 30

  cross-browser-tests:
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: front_desk_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Setup database
      working-directory: ./backend
      run: |
        npm run migrate
        npm run seed
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run start:prod &
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE: front_desk_test
        PORT: 3001
    
    - name: Wait for backend
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'
    
    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Run cross-browser tests
      working-directory: ./frontend
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
    
    - name: Upload browser test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ matrix.browser }}-test-results
        path: frontend/test-results/
        retention-days: 30

  security-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --all-projects --severity-threshold=high
    
    - name: Run npm audit
      run: |
        cd backend && npm audit --audit-level=high
        cd ../frontend && npm audit --audit-level=high

  test-summary:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, e2e-tests, accessibility-tests, performance-tests, cross-browser-tests]
    if: always()
    
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Backend Tests: ${{ needs.backend-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend Tests: ${{ needs.frontend-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Cross-browser Tests: ${{ needs.cross-browser-tests.result }}" >> $GITHUB_STEP_SUMMARY